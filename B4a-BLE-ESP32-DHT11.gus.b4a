Build1=Default,gus.b4a_DHT11
File1=Conexion.bal
File2=Datos.bal
File3=DHT11.jpg
File4=ESP32.jpg
File5=main.bal
File6=Presentacion.bal
FileGroup1=Default Group
FileGroup2=Default Group
FileGroup3=Default Group
FileGroup4=Default Group
FileGroup5=Default Group
FileGroup6=Default Group
Group=Default Group
Library1=ble2
Library2=byteconverter
Library3=core
Library4=randomaccessfile
Library5=runtimepermissions
Library6=xui
Library7=b4xtable
ManifestCode='This code will be applied to the manifest file during compilation.~\n~'You do not need to modify it in most cases.~\n~'See this link for for more information: https://www.b4x.com/forum/showthread.php?p=78136~\n~AddManifestText(~\n~<uses-sdk android:minSdkVersion="21" android:targetSdkVersion="33"/>~\n~<supports-screens android:largeScreens="true" ~\n~    android:normalScreens="true" ~\n~    android:smallScreens="true" ~\n~    android:anyDensity="true"/>)~\n~SetApplicationAttribute(android:icon, "@drawable/icon")~\n~SetApplicationAttribute(android:label, "$LABEL$")~\n~CreateResourceFromFile(Macro, Themes.LightTheme)~\n~'End of default text.~\n~AddPermission(android.permission.BLUETOOTH)~\n~AddPermission(android.permission.BLUETOOTH_ADMIN)~\n~AddPermission(android.permission.ACCESS_COARSE_LOCATION)~\n~AddPermission(android.permission.BLUETOOTH_SCAN)~\n~AddPermission(android.permission.BLUETOOTH_CONNECT)~\n~AddPermission(android.permission.ACCESS_FINE_LOCATION)
Module1=Starter
NumberOfFiles=6
NumberOfLibraries=7
NumberOfModules=1
Version=12.8
@EndOfDesignText@
#Region  Project Attributes 
	#ApplicationLabel: Temperatura y Humedad
	#VersionCode: 1
	#VersionName: 
	'SupportedOrientations possible values: unspecified, landscape or portrait.
	#SupportedOrientations: portrait
	#CanInstallToExternalStorage: False
#End Region

#Region  Activity Attributes 
	#FullScreen: False
	#IncludeTitle: false
	
	#BridgeLogger:true
	
#End Region

Sub Process_Globals
	'These global variables will be declared once when the application starts.
	'These variables can be accessed from all modules.
	Private xui As XUI

End Sub

Sub Globals
	'These global variables will be redeclared each time the activity is created.
	
	Dim UART_UUid ="6e400001-b5a3-f393-e0a9-e50e24dcca9e" As String
	Dim UART_TX = "6e400003-b5a3-f393-e0a9-e50e24dcca9e" As String
	Dim UART_RX = "6E400002-B5A3-F393-E0A9-E50E24DCCA9E" As String
	
'------------------------------------
' Mienbros de main
	Private TabHost1 As TabHost

'------------------------------------
' Mienbros de Presentacion

	Private LblDescripcion As Label
	Private LblTitulo As Label
	Private Pn_1_Pres As Panel
	Private ImgDHT11 As ImageView
	Private ImgESP32 As ImageView
'------------------------------------
' Mienbros de Conexion
	
	Private TogBtnConexion As ToggleButton	
	'Private BtnConexion As Button
	Private BtnDesconexion As Button
	Private Label1 As Label
	'Private ListView1 As ListView
	Private Pnl_1_Conexion As Panel
	Private Pnl_2_Conexion As Panel
	Private CustomListView1 As CustomListView
	
	
	'------------------------------------
	' Mienbros de Datos

	Private LblHumedad As Label
	Private LblTemperatura As Label
	Private Pnl_1_Datos As Panel

'------------------------------------
' Mienbros
	
	Dim Control_BLE As BleManager2
	Dim PERMISO As RuntimePermissions
	Private BC As ByteConverter
	'Control_BLE.Initialize("Control_BLE")	
'------------------------------------
'	
	Dim IDs(15) As String
	Dim x=0 As Int
	Dim xx As Boolean
	Dim currentStateText As String
	'Private CustomListView1 As CustomListView
End Sub

Sub Activity_Create(FirstTime As Boolean)
	


	Activity.LoadLayout("main")
	Activity.Title="Temperatura y Humedad"
	TabHost1.AddTab("Titulo","Presentacion.bal")
	TabHost1.AddTab("Conexion","Conexion.bal")
	TabHost1.AddTab("Datos","Datos.bal")
	TabHost1.SetLayout(0,0,100%x,100%y)
	
'------------------------------------
'
	Pn_1_Pres.SetLayout(0,0,100%x,100%y)
	LblTitulo.SetLayout(2%x,5%y,90%x,10%y)
	LblDescripcion.SetLayout(8%x,10%y,80%x,40%y)
	
	ImgDHT11.SetLayout(52%x,50%y,40%x,30%y)
	ImgDHT11.bitmap=LoadBitmap(File.DirAssets,"DHT11.jpg")
	ImgESP32.SetLayout(5%x,50%y,40%x,30%y)
	ImgESP32.Bitmap=LoadBitmap(File.DirAssets,"ESP32.jpg")
	
	
	
'------------------------------------
'
	Pnl_1_Conexion.SetLayout(0%x,2%y,95%x,20%y)
	TogBtnConexion.SetLayout(5%x,7%y,40%x,10%y)
	'BtnConexion.SetLayout(5%x,5%y,40%x,10%y)
	
	TogBtnConexion.Enabled=True
	BtnDesconexion.SetLayout(50%x,5%y,40%x,10%y)
	BtnDesconexion.Enabled=False
	
	Pnl_2_Conexion.SetLayout(0%x,24%y,95%x,65%y)
	'Pnl_2_Conexion.Initialize("Pnl_2_Conexion")
	Label1.SetLayout(5%x,2%y,90%x,10%y)
	'ListView1.SetLayout(5%x,12%y,85%x,50%y)
	'CustomListView1.Base_Resize(150,50%y)
	'CustomListView1.Initialize(Me,"CustomListView1")
	
	'Activity.AddView(CustomListView1.AsView ,0%x,0,Pnl_2_Conexion.Width,Pnl_2_Conexion.Height)
	

	CustomListView1.DefaultTextBackgroundColor=Colors.Black
	CustomListView1.PressedColor=Colors.Cyan
	CustomListView1.DefaultTextColor=Colors.White

'------------------------------------
'
	Pnl_1_Datos.SetLayout(0,0,95%x,85%y)
	LblTemperatura.SetLayout(5%x,5%y,85%x,20%y)
	LblHumedad.SetLayout(5%x,30%y,85%x,20%y)

'------------------------------------
'	
	Control_BLE.Initialize("Control_BLE")
	
End Sub

Sub Activity_Resume

End Sub

Sub Activity_Pause (UserClosed As Boolean)

End Sub

'Private Sub BtnConexion_Click
'	
'	PERMISO.CheckAndRequest(PERMISO.PERMISSION_ACCESS_COARSE_LOCATION)
'	Wait For Activity_PermissionResult (Permission As String, Result As Boolean)
'	Log(Result)
'	If Result = False Then
'		ToastMessageShow("Sin Permiso para BUSCAR", True)
'		Sleep(2000)
'		Return
'	End If
'	Log("boton Scan")
'	PERMISO.CheckAndRequest(PERMISO.PERMISSION_ACCESS_FINE_LOCATION)
'	Wait For Activity_PermissionResult (Permission As String, Result As Boolean)
'	Log(Result)
'	If Result = False Then
'		ToastMessageShow("Sin Permiso FINE LOCATION", True)
'		Sleep(2000)
'		Return
'	End If
'	
'	Control_BLE.Scan2(Null,False)
'	Log("boton Scan2")
'
'End Sub


Private Sub BtnDesconexion_Click
	Control_BLE.Disconnect
	BtnDesconexion.Enabled=False
	TogBtnConexion.Enabled=True
	ToastMessageShow("Desonectado", True)

	'BtnConexion.Enabled=True
End Sub

Sub Control_BLE_DeviceFound (Name As String, Id As String, AdvertisingData As Map, RSSI As Double)
	
	Log("Encontrado: " & Name & ", " & Id & ", RSSI = " & RSSI & ", " & AdvertisingData) 
	'ListView1.AddSingleLine( Name & ", " & Id )
	CustomListView1.AddTextItem(Name & " " & Id,x)
	'ListView1.
	IDs(x)=Id
	x=x+1
	Log(IDs(x))
	
End Sub

Private Sub ListView1_ItemClick (Position As Int, Value As Object)
	
	Log("Click en Lista")
	Control_BLE.StopScan
	Control_BLE.Connect2(IDs(Position),False)
	Log("conectsando..")
	'Label1.Text=
End Sub

Sub Control_BLE_Connected (services As List)
	
	ToastMessageShow("Conectado", True)
	Log("Conectado")
	Control_BLE.SetNotify(UART_UUid,UART_TX,True)
	'BtnConexion.Enabled=False
	TogBtnConexion.Enabled=False
	BtnDesconexion.Enabled=True
	Sleep(2000)
	TabHost1.CurrentTab=2
	
End Sub

Sub Control_BLE_DataAvailable (ServiceId As String, Characteristics As Map)
	
	Log("data available")
'	Log(ServiceId & " ,,, " & Characteristics)
'	LblTemperatura.Text=Characteristics.get(UART_TX)
'	Log(Characteristics.get(UART_TX))
'	Dim dataTemp() As Byte
'	dataTemp()=Characteristics.get(UART_TX)
'	BC.StringFromBytes (dataTemp,"UTF8")
'	Log(BytesToString(dataTemp,0, dataTemp.Length, "UTF8"))
'	
	
	
	Dim BC As ByteConverter
	For Each key As String In Characteristics.Keys

		Dim b() As Byte = Characteristics.Get(key)
		Log (" ")
		Log("Key: " & key &", value: " & BC.HexFromBytes(b))
		Log("string: " & BytesToString(b, 0, b.Length, "utf8") )'useful if the data is actually a string
		If xx Then
			LblTemperatura.Text=BytesToString(b, 0, b.Length, "utf8")
			xx=False
		Else
			LblHumedad.Text=BytesToString(b, 0, b.Length, "utf8")
			xx=True
		End If
	Next
	
End Sub

Sub Control_BLE_StateChanged (State As Int)
	
	Select State
		Case Control_BLE.STATE_POWERED_OFF
			currentStateText = "POWERED OFF"
		Case Control_BLE.STATE_POWERED_ON
			currentStateText = "POWERED ON"
		Case Control_BLE.STATE_UNSUPPORTED
			currentStateText = "UNSUPPORTED"
	End Select
	ToastMessageShow(currentStateText,True)
	
End Sub

Private Sub TogBtnConexion_CheckedChange(Checked As Boolean)
	
	If (Checked) Then
		PERMISO.CheckAndRequest(PERMISO.PERMISSION_ACCESS_COARSE_LOCATION)
		Wait For Activity_PermissionResult (Permission As String, Result As Boolean)
		Log(Result)
		If Result = False Then
			ToastMessageShow("Sin Permiso para BUSCAR", True)
			Sleep(2000)
			Return
		End If
		'Log("boton Scan")
		PERMISO.CheckAndRequest(PERMISO.PERMISSION_ACCESS_FINE_LOCATION)
		Wait For Activity_PermissionResult (Permission As String, Result As Boolean)
		Log(Result)
		If Result = False Then
			ToastMessageShow("Sin Permiso FINE LOCATION", True)
			Sleep(2000)
			Return
		End If
	
		Control_BLE.Scan2(Null,False)
		Log("boton Scan2")
	Else
		Control_BLE.StopScan

	End If
	
End Sub

Private Sub CustomListView1_ItemClick (Index As Int, Value As Object)
	Log("Click en Lista")
	Control_BLE.StopScan
	Control_BLE.Connect2(IDs(Index),False)
	Log("conectsando..")
	ToastMessageShow("Conectando... ", True)

End Sub